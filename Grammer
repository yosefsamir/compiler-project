<program> ::= <declaration> 
            | <statement>
            | <declaration> <program>
            | <statement> <program>

<declaration> ::= <variable_declaration> | <function_definition> 

<variable_declaration> ::= <type> <identifier> <end_line>
                         | <type> <identifier> "=" <expression> <end_line>
                         | <type> <identifier> "[" <number> "]" <end_line>
                         | <type> <identifier> "[" <number> "]" "=" "{" <array_values> "}" <end_line>

<type> ::= "int" | "float" | "char" | "string" | "bool" | "big int" | "double" | "small int"
<array_values> ::= <expression> | <expression> "," <array_values>

<function_definition> ::= "function" <identifier> "(" <parameters> ")" "{" <program> "}"
<parameters> ::= <parameter> | <parameter> "," <parameters>
<parameter> ::= <type> <identifier> | <type> <identifier> "[" "]" | <type> <identifier> "=" <expression>




<statement> ::= <assignment>
              | <if_statement>
              | <while_statement>
              | <for_statement>
              | <return_statement>
              | <function_call> <end_line>

<assignment> ::= <identifier> "=" <expression> <end_line>

<if_statement> ::= "if" "(" <conditions> ")" "{" <program> "}"
                 | "if" "(" <conditions> ")" "{" <program> "}" <else_if_statement> <else_statement>
                 | "if" "(" <conditions> ")" "{" <program> "}" <else_statement>

<else_if_statement> ::= "else if" "(" <conditions> ")" "{" <program> "}" <else_if_statement> | "else if" "(" <conditions> ")" "{" <program> "}"
<else_statement> ::= "else" "{" <program> "}"


<while_statement> ::= "while" "(" <conditions> ")" "{" <program> "}"

<for_statement> ::= "for" "(" <assignment> <conditions> ";" <expression> ")" "{" <program> "}"

<return_statement> ::= "return" <expression> <end_line>

<function_call> ::= <identifier> "(" <arguments> ")"
<arguments> ::= <expression> | <expression> "," <arguments>

<expression> ::= <term>
               | <term> "+" <expression>
               | <term> "-" <expression>

<term> ::= <factor>
         | <factor> "*" <term>
         | <factor> "/" <term>

<factor> ::= <identifier>
           | <number>
           | "(" <expression> ")"


<conditions> ::= <condition> | <condition> "&&" <conditions> | <condition> "||" <conditions>           
<condition> ::= <expression> <relational_operator> <expression>
<relational_operator> ::= "==" | "!=" | "<" | "<=" | ">" | ">="

<print> ::= "print" "(" <expression> ")" <end_line>

<end_line> ::= ";"

<identifier> ::= [a-zA-Z[a-zA-Z_]0-9_]*
<number> ::= [0-9]+ | [0-9]+"."[0-9]+
